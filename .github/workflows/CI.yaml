name: python flask test CI/CD

on:
  push:
    branches:
      - master 

  pull_request:
    branches:
      - master 

env:
  SERVICE_NAME: julio0619/flaskazure
  NAMESPACE: flaskazure
  MYSQL_USER: ${{ secrets.USER_DEV_SQL }}
  MYSQL_PASSWORD: ${{ secrets.PASS_DEV_SQL }}
  MYSQL_HOST: ${{ secrets.HOST_DEV_SQL }}
  MYSQL_DATABASE: ${{ secrets.DB_DEV_SQL }}
      
jobs:  

  run_tests:
    runs-on: self-hosted
    strategy:
      matrix:
        python-version: [3.8, 3.9]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64
      - name: Install requirements
        working-directory: src
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install --upgrade 'sentry-sdk[flask]'
          pip install pytest
      
      - name: Test with pytest
        working-directory: src
        run: |
          MYSQL_USER=$MYSQL_USER 
          MYSQL_PASSWORD=$MYSQL_PASSWORD
          MYSQL_HOST=$MYSQL_HOST
          MYSQL_DATABASE=$MYSQL_DATABASE
          pytest test_app.py


  analyze:
    name: Analyze CodeQL
    needs: [run_tests]
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'python' ]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: ${{ matrix.language }}

    - name: Autobuild
      uses: github/codeql-action/autobuild@v2

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2
  

  build_dockerhub:
    name: Build application on dockerhub
    runs-on: self-hosted
    environment: 
      name: Development

    steps:
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      -
        name: Build and push
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{ env.SERVICE_NAME }}
