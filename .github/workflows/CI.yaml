name: python flask test CI/CD

on:

  push:
    branches:
      - master
      
  pull_request:
    branches:
      - master 

env:
  SERVICE_NAME: julio0619/flaskazure
  NAMESPACE: flaskazure
  MYSQL_USER: ${{ secrets.USER_DEV_SQL }}
  MYSQL_PASSWORD: ${{ secrets.PASS_DEV_SQL }}
  MYSQL_HOST: ${{ secrets.HOST_DEV_SQL }}
  MYSQL_DATABASE: ${{ secrets.DB_DEV_SQL }}

      
jobs:  

  run_tests:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 
        uses: actions/setup-python@v4
        with:
          python-version: '3.8' 
          architecture: 'x64' 
      - name: Install requirements
        working-directory: src
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install --upgrade 'sentry-sdk[flask]'
          pip install pytest

  
  sonarqube:
    name: SonarQube Scan
    runs-on: self-hosted
    needs: [run_tests]
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: SonarQube Scan
      uses: sonarsource/sonarqube-scan-action@master
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

  build_dockerhub:
    name: Build application on dockerhub
    runs-on: self-hosted
    needs: [sonarqube]
    environment: 
      name: Development

    steps:
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      -
        name: Build and push
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{ env.SERVICE_NAME }}

#  deploy_Develoment:
#    name: Deploy to env dev
#    needs: [build_dockerhub]
#    runs-on: ubuntu-latest
#    environment: 
#      name: Development
#      url: https://nsdevflask.duckdns.org

#    steps:
#      - name: Connecting to server via ssh
#        uses: appleboy/ssh-action@master
#        with:
#          host: ${{ secrets.SSH_HOST }}
#          username: ${{ secrets.SSH_USERNAME }}
#          password: ${{ secrets.SSH_PASSWORD }}
#          port: ${{ secrets.SSH_PORT_DEV }}
#          script_stop: true
#          script: |
#           cd /home
#            docker-compose -f flask.yaml pull
#            docker-compose -f flask.yaml up -d

  deploy-to-cluster:
    name: deploy to cluster
    needs: [build_dockerhub]
    runs-on: self-hosted
    environment: 
      name: Development
      url: https://nsflask.duckdns.org

    steps:
    - uses: actions/checkout@master
    - name: deploy to cluster
      uses: steebchen/kubectl@v2.0.0
      with: 
        config: ${{ secrets.KUBE_CONFIG_DATA }}
        command: |
          set image deployment/flaskazure flaskazure=julio0619/flaskazure:latest -n flaskazure
          set image deployment/flaskazure flaskazure=julio0619/flaskazure -n flaskazure
    - name: verify deployment
      uses: steebchen/kubectl@v2.0.0
      with:
        config: ${{ secrets.KUBE_CONFIG_DATA }}
        version: v1.21.0 
        command: rollout status deployment/flaskazure -n flaskazure
